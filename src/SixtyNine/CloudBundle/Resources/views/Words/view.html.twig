{% extends 'SixtyNineCloudBundle::layout.html.twig' %}

{% set curPage = 'words' %}
{% set pageTitle = 'View Words' | trans %}
{% set pageHeader = 'Words List' | trans %}
{% set pageSubHeader = 'Words' | trans %}
{% set breadcrumb = [
    { title: 'Home' | trans , url: path('sn_words_home') },
    { title: 'Word Lists' | trans, url: path('sn_words_list') },
    { title: 'Words' | trans }
] %}

{% form_theme addWordsForm 'bootstrap_3_layout.html.twig' %}
{% form_theme filtersForm 'bootstrap_3_layout.html.twig' %}

{% block buttons %}

    <button type="button" class="btn btn-default" data-toggle="modal" data-target="#addWordsModal">
        {{ 'Add words' | trans }}
    </button>

    <button type="button" class="btn btn-default" data-toggle="modal" data-target="#importModal">
        {{ 'Import URL' | trans }}
    </button>

    <button type="button" class="btn btn-default" data-toggle="modal" data-target="#orientationModal">
        {{ 'Orientation' | trans }}
    </button>

    <button type="button" class="btn btn-default" data-toggle="modal" data-target="#colorModal">
        {{ 'Color' | trans }}
    </button>

{% endblock %}

{% block body %}
    <section class="list-words">
{#
        {% for word in list.words %}
        <div class="word" data-id="{{ word.id }}">
            <span class="color" style="background-color: {{ word.color }};"></span>
            <span class="orientation" data-url="{{ path('sn_words_toggle_orientation', {'id': word.id}) }}">
                <i class="glyphicon glyphicon-option-{% if word.orientation == 'horiz' %}horizontal{% else %}vertical{% endif %}"></i>
            </span>
            <span class="text">{{ word.text }}</span>
            <span class="count">{{ word.count }}</span>
            <span class="remove glyphicon glyphicon-remove" data-url="{{ path('sn_words_remove_word', {'id': list.id, 'wordId': 9999}) }}"></span>
        </div>
        {% endfor %}
#}
    </section>

    <!-- AddWords Modal -->
    {{ form_start(addWordsForm, {'action': path('sn_words_add_words', {'id': list.id}), 'method': 'post'}) }}
    {% modal addWordsModal %}
        {% header %}
            <h4 class="modal-title" id="importModalLabel">
                {{ 'Import words from URL' | trans }}
            </h4>
        {% endheader %}
        {% body %}
            {{ form_widget(addWordsForm) }}
        {% endbody %}
        {% footer %}
            <button type="button" class="btn btn-default" data-dismiss="modal">
                {{ 'Cancel' | trans }}
            </button>
            <button type="submit" class="btn btn-primary">
                {{ 'Add words' | trans }}
            </button>
        {% endfooter %}
    {% endmodal %}
    {{ form_end(addWordsForm) }}

    <!-- Import Modal -->
    {{ form_start(filtersForm, {'action': path('sn_words_import_url', {'id': list.id}), 'method': 'post'}) }}
    {% modal importModal %}
        {% header %}
            <h4 class="modal-title" id="importModalLabel">
                {{ 'Import words from URL' | trans }}
            </h4>
        {% endheader %}
        {% body %}
            {{ form_widget(filtersForm) }}
        {% endbody %}
        {% footer %}
            <button type="button" class="btn btn-default" data-dismiss="modal">
                {{ 'Cancel' | trans }}
            </button>
            <button type="submit" class="btn btn-primary">
                {{ 'Import' | trans }}
            </button>
        {% endfooter %}
    {% endmodal %}
    {{ form_end(filtersForm) }}

    <!-- Orientation modal -->
    {% modal orientationModal %}
        {% header %}
        <h4 class="modal-title">
            {{ 'Randomize words orientation' | trans }}
        </h4>
        {% endheader %}
        {% body %}
            {% for key, orientation in orientations %}
                <li><a href="{{ path('sn_words_random_orientation', {'id': list.id, 'orientation': key}) }}">{{ orientation }}</a></li>
            {% endfor %}
        {% endbody %}
        {% footer %}
        <button type="button" class="btn btn-default" data-dismiss="modal">
            {{ 'Cancel' | trans }}
        </button>
        {% endfooter %}
    {% endmodal %}

    <!-- Color modal -->
    {% modal colorModal %}
        {% header %}
            <h4 class="modal-title">
                {{ 'Randomize words colors' | trans }}
            </h4>
        {% endheader %}
        {% body %}
            <form>
                <select class="form-control">
                    {% for palette in palettes %}
                        <option value="{{ palette.id }}">{{ palette.name }}</option>
                    {% endfor %}
                </select>
            </form>
        {% endbody %}
        {% footer %}
            <button type="button" class="btn btn-default" data-dismiss="modal">
                {{ 'Cancel' | trans }}
            </button>
            <button type="submit" class="btn btn-primary"
                    data-url="{{ path('sn_words_random_color', {'id': list.id, 'paletteId': '9999', 'type': 'cycle'}) }}">
                {{ 'Cycle' | trans }}
                <i class="glyphicon glyphicon-repeat"></i>
            </button>
            <button type="submit" class="btn btn-primary"
                    data-url="{{ path('sn_words_random_color', {'id': list.id, 'paletteId': '9999', 'type': 'random'}) }}">
                {{ 'Random' | trans }}
                <i class="glyphicon glyphicon-random"></i>
            </button>
        {% endfooter %}
    {% endmodal %}

{% endblock %}

{% block javascripts %}

    {%- include 'SixtyNineCloudBundle:Components:js-startup.html.twig' -%}

    <script type="text/template" id="sn-cloud-words-item-template">
        <span class="color" style="background-color: <%= color %>;"></span>
        <span class="orientation">
            <i class="glyphicon glyphicon-option-<%= orientation === 'horiz' ? 'horizontal' : 'vertical' %>"></i>
        </span>
        <span class="text"><%= text %></span>
        <span class="count"><%= count %></span>
        <span class="remove glyphicon glyphicon-remove"></span>
    </script>

    <script type="text/javascript">

        SnCloud.showSpinner();

        $(function () {

            new SnCloud.Views.WordsList().render();

            var collection = new SnCloud.Models.WordCollection([], {listId: {{ list.id }} });
            collection.fetch().then(function () {

                SnCloud.hideSpinner();

                new SnCloud.Views.WordsView({
                    collection: collection
                }).render();

            });
        });

    </script>

{% endblock %}
